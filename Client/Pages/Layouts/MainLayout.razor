@using Client.Extensions.Authentication
@using Client.Pages.Account.Authentication
@using System.Runtime.CompilerServices
@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager

<MudThemeProvider/>
<MudDialogProvider/>
<MudSnackbarProvider/>

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())"/>
        <MudText Typo="Typo.h5" Class="ml-3">EVO.Games</MudText>

        @*Separador*@
        <div class="flex-grow-1"></div>

        <div class="d-none d-md-flex align-center">
            <AuthorizeView>
                <Authorized Context="authState">
                    <MudButton Variant="Variant.Text" Style="margin-right: 1em;" OnClick="@(() => NavigationManager.NavigateTo("account/profile"))">
                        <MudText Typo="Typo.h6" Style="color: white; text-transform: none">@authState.User.Identity?.Name</MudText>
                    </MudButton>
                    <MudButton Color="Color.Error" Variant="Variant.Filled" DisableElevation="true" OnClick="HandleLogout">Logout</MudButton>
                </Authorized>
                <NotAuthorized>
                    <MudTooltip Text="Login">
                        <MudIconButton Icon="@(Icons.Rounded.AccountCircle)" Link="@("login" + AddReturnUrl())" Color="@Color.Inherit"></MudIconButton>
                    </MudTooltip>

                    <MudTooltip Text="Register">
                        <MudIconButton Icon="@(Icons.Rounded.House)" Link="@("register" + AddReturnUrl())" Color="@Color.Inherit"></MudIconButton>
                    </MudTooltip>
                </NotAuthorized>
                <Authorizing>
                    <MudSkeleton Width="30%" Height="42px;"/>
                </Authorizing>
            </AuthorizeView>

            <MudDivider Vertical="true" FlexItem="true" DividerType="DividerType.Middle"></MudDivider>

            <MudTooltip Text="Docs">
                <MudIconButton Icon="@Icons.Custom.Brands.MudBlazor" Color="Color.Inherit" Link="https://mudblazor.com/" Target="_blank"/>
            </MudTooltip>

            <MudTooltip Text="Go to Github">
                <MudIconButton Icon="@Icons.Custom.Brands.GitHub" Color="Color.Inherit" Link="https://github.com/Garderoben/MudBlazor" Target="_blank"/>
            </MudTooltip>
        </div>
    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2">

        @*NavMenu*@
        <NavMenu/>

    </MudDrawer>
    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {


    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    MudTheme darkTheme = new()
    {
        Palette = new Palette()
        {
            Black = "#27272f",
            Background = "#32333d",
            BackgroundGrey = "#27272f",
            Surface = "#373740",
            DrawerBackground = "#27272f",
            DrawerText = "rgba(255,255,255, 0.50)",
            DrawerIcon = "rgba(255,255,255, 0.50)",
            AppbarBackground = "#27272f",
            AppbarText = "rgba(255,255,255, 0.70)",
            TextPrimary = "rgba(255,255,255, 0.70)",
            TextSecondary = "rgba(255,255,255, 0.50)",
            ActionDefault = "#adadb1",
            ActionDisabled = "rgba(255,255,255, 0.26)",
            ActionDisabledBackground = "rgba(255,255,255, 0.12)"
        }
    };

    async Task HandleLogout()
    {
        await ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ClearCurrentUserAsync();
    }

    string AddReturnUrl()
    {
        string loc = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        string returnUrl = "";

        if (!string.IsNullOrEmpty(loc) && !loc.Contains("login") && !loc.Contains("register"))
            returnUrl = $"?returnUrl={loc}";

        return returnUrl;
    }

}